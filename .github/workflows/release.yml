# The Reactive C++ Toolbox.
# Copyright (C) 2020 Reactive Markets Limited
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
name: Release

on:
  push:
    tags:
      - v*

jobs:
  release:
    runs-on: ubuntu-latest
    container: reactivemarkets/toolchain-cpp:debian

    strategy:
      matrix:
        build_type: [Release]
        compiler:
          - {cc: gcc-8, cxx: g++-8}

    steps:
      - name: Checkout project
        uses: actions/checkout@v2

      - name: Set release version
        run: |
          release_tag=$(echo ${GITHUB_REF##*/})
          echo ::set-env name=RELEASE_TAG::$release_tag
          echo ::set-env name=RELEASE_VERSION::$(echo $release_tag | sed "s,^v,,")

      - name: Configure project
        run: |
          mkdir -p build
          cd build
          cmake .. -G "Unix Makefiles" \
            -DTOOLBOX_BUILD_SHARED=ON \
            -DTOOLBOX_VERSION=${{ env.RELEASE_VERSION }} \
            -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
            -DCMAKE_C_COMPILER=${{ matrix.compiler.cc }} \
            -DCMAKE_CXX_COMPILER=${{ matrix.compiler.cxx }}

      - name: Build project
        run: cd build && make -j2 all

      - name: Package artefacts
        run: cd build && make -j2 package

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.RELEASE_TAG }}
          release_name: Release ${{ env.RELEASE_VERSION }}
          draft: true
          prerelease: false

      - name: Upload tarball package
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/dist/toolbox-cpp-${{ env.RELEASE_VERSION }}-x86_64.tar.gz
          asset_name: toolbox-cpp-${{ env.RELEASE_VERSION }}-x86_64.tar.gz
          asset_content_type: application/gzip

      - name: Upload RPM package
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/dist/toolbox-cpp-${{ env.RELEASE_VERSION }}-x86_64.rpm
          asset_name: toolbox-cpp-${{ env.RELEASE_VERSION }}-x86_64.rpm
          asset_content_type: application/x-rpm

      - name: Upload DEB package
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/dist/toolbox-cpp-${{ env.RELEASE_VERSION }}-x86_64.deb
          asset_name: toolbox-cpp-${{ env.RELEASE_VERSION }}-x86_64.deb
          asset_content_type: application/vnd.debian.binary-package
