---
version: 2.1
jobs:
  lint:
    docker:
      - image: registry.gitlab.com/reactivemarkets/public-registry/toolchain-cpp:debian
    steps:
      - checkout
      - run:
          name: Run Cppcheck
          command: |
            mkdir -p build
            cd build
            cmake .. -G "Unix Makefiles" \
              -DTOOLBOX_VERSION="${CIRCLE_TAG:-$CIRCLE_BRANCH}" \
              -DCMAKE_C_COMPILER=gcc-8 \
              -DCMAKE_CXX_COMPILER=g++-8
            make -j2 cppcheck
  test_clang_debug:
    docker:
      - image: registry.gitlab.com/reactivemarkets/public-registry/toolchain-cpp:debian
    steps:
      - checkout
      - run:
          name: Test Clang debug build
          command: |
            mkdir -p build
            cd build
            cmake .. -G "Unix Makefiles" \
              -DTOOLBOX_BUILD_SHARED=ON \
              -DTOOLBOX_VERSION="${CIRCLE_TAG:-$CIRCLE_BRANCH}" \
              -DCMAKE_BUILD_TYPE=DEBUG \
              -DCMAKE_C_COMPILER=clang-7 \
              -DCMAKE_CXX_COMPILER=clang++-7
            VERBOSE=1 make -j2 all test
  test_clang_release:
    docker:
      - image: registry.gitlab.com/reactivemarkets/public-registry/toolchain-cpp:debian
    steps:
      - checkout
      - run:
          name: Test Clang release build
          command: |
            mkdir -p build
            cd build
            cmake .. -G "Unix Makefiles" \
              -DTOOLBOX_BUILD_SHARED=ON \
              -DTOOLBOX_VERSION="${CIRCLE_TAG:-$CIRCLE_BRANCH}" \
              -DCMAKE_BUILD_TYPE=RELEASE \
              -DCMAKE_C_COMPILER=clang-7 \
              -DCMAKE_CXX_COMPILER=clang++-7
            VERBOSE=1 make -j2 all test
  test_gcc_debug:
    docker:
      - image: registry.gitlab.com/reactivemarkets/public-registry/toolchain-cpp:debian
    steps:
      - checkout
      - run:
          name: Test GCC debug build
          command: |
            mkdir -p build
            cd build
            cmake .. -G "Unix Makefiles" \
              -DTOOLBOX_BUILD_SHARED=ON \
              -DTOOLBOX_VERSION="${CIRCLE_TAG:-$CIRCLE_BRANCH}" \
              -DCMAKE_BUILD_TYPE=DEBUG \
              -DCMAKE_C_COMPILER=gcc-8 \
              -DCMAKE_CXX_COMPILER=g++-8
            VERBOSE=1 make -j2 all test
  test_gcc_release:
    docker:
      - image: registry.gitlab.com/reactivemarkets/public-registry/toolchain-cpp:debian
    steps:
      - checkout
      - run:
          name: Test GCC release build
          command: |
            mkdir -p build
            cd build
            cmake .. -G "Unix Makefiles" \
              -DTOOLBOX_BUILD_SHARED=ON \
              -DTOOLBOX_VERSION="${CIRCLE_TAG:-$CIRCLE_BRANCH}" \
              -DCMAKE_BUILD_TYPE=RELEASE \
              -DCMAKE_C_COMPILER=gcc-8 \
              -DCMAKE_CXX_COMPILER=g++-8
            VERBOSE=1 make -j2 all test
  build_doc:
    docker:
      - image: registry.gitlab.com/reactivemarkets/public-registry/toolchain-cpp:debian
    steps:
      - checkout
      - run:
          name: Build documentation
          command: |
            mkdir -p build
            cd build
            cmake .. -G "Unix Makefiles" \
              -DTOOLBOX_VERSION="${CIRCLE_TAG:-$CIRCLE_BRANCH}" \
              -DCMAKE_C_COMPILER=gcc-8 \
              -DCMAKE_CXX_COMPILER=g++-8
            make -j2 toolbox-doc
      - persist_to_workspace:
          root: build/doc
          paths: html
  build_release:
    docker:
      - image: registry.gitlab.com/reactivemarkets/public-registry/toolchain-cpp:debian
    steps:
      - checkout
      - run:
          name: Build release
          command: |
            mkdir -p build
            cd build
            cmake .. -G "Unix Makefiles" \
              -DTOOLBOX_BUILD_SHARED=ON \
              -DTOOLBOX_VERSION="${CIRCLE_TAG:-$CIRCLE_BRANCH}" \
              -DCMAKE_BUILD_TYPE=RELEASE \
              -DCMAKE_C_COMPILER=gcc-8 \
              -DCMAKE_CXX_COMPILER=g++-8
            make -j2 all package
      - persist_to_workspace:
          root: build/dist
          paths: ./*
  deploy_doc:
    docker:
      - image: node:10.15
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "f0:1c:80:78:74:eb:00:f2:20:6f:2c:99:a8:6a:d9:7c"
      - attach_workspace:
          at: build/doc
      - run:
          name: Deploy documentation
          command: |
            npm install -g --silent gh-pages@2.0.1
            git config user.email "ci-build@reactivemarkets.com"
            git config user.name "ci-build"
            gh-pages --message "[skip ci] Deploy GitHub Pages: ${CIRCLE_SHA1}" \
              --dist build/doc/html
  deploy_release:
    docker:
      - image: cibuilds/github:0.12
    steps:
      - attach_workspace:
          at: build/dist
      - run:
          name: Deploy GitHub release
          command: |
            ghr -t "${GITHUB_TOKEN}" \
              -u "${CIRCLE_PROJECT_USERNAME}" \
              -r "${CIRCLE_PROJECT_REPONAME}" \
              -c "${CIRCLE_SHA1}" \
              -delete "${CIRCLE_TAG:-$CIRCLE_BRANCH}" \
              build/dist/
      - store_artifacts:
          path: build/dist

workflows:
  version: 2
  build:
    jobs:
      - lint
      - test_clang_debug:
          requires:
            - lint
      - test_clang_release:
          requires:
            - lint
      - test_gcc_debug:
          requires:
            - lint
      - test_gcc_release:
          requires:
            - lint
      - build_doc:
          requires:
            - test_clang_debug
            - test_clang_release
            - test_gcc_debug
            - test_gcc_release
          filters:
            branches:
              only: master
      - build_release:
          requires:
            - test_clang_debug
            - test_clang_release
            - test_gcc_debug
            - test_gcc_release
          filters:
            branches:
              only: master
            tags:
              only: /^\d+[.]\d+[.]\d+$/
      - deploy_doc:
          requires:
            - build_doc
          filters:
            branches:
              only: master
      - deploy_release:
          requires:
            - build_release
          filters:
            branches:
              only: master
            tags:
              only: /^\d+[.]\d+[.]\d+$/
